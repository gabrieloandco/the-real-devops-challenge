stages:
  - test
  - build
  - deploy

test:
  image: painless/tox:latest
  stage: test
  variables:
    VALUE: KEY

  script:
      - cd app && /bin/bash tox

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
      - |
          docker --version
          apk add --no-cache curl jq python3 py-pip && pip install awscli==1.18.154
  script:
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - export ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
    - echo "ACCOUNT_ID= $ACCOUNT_ID"
    - export REPOSITORY_URL=$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/api:${CI_PIPELINE_ID} && echo $REPOSITORY_URL
    - docker build -t $REPOSITORY_URL .
    - docker push $REPOSITORY_URL
    - docker tag $REPOSITORY_URL $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/api:latest
    - docker push $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/api:latest

deploy:
  image: dtzar/helm-kubectl:3.3.4
  stage: deploy
  before_script:
    - curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
    - mv /tmp/eksctl /usr/local/bin
    - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/aws-iam-authenticator
    - chmod +x ./aws-iam-authenticator
    - mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
    - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bash_profile
  script:
    - export INIT_WEIGHT=0 && export NEW_WEIGHT=100
    - eksctl utils write-kubeconfig --kubeconfig kubeconfig-$CLUSTER_NAME.yaml --cluster $CLUSTER_NAME
    - export KUBECONFIG=${PWD}/kubeconfig-$CLUSTER_NAME.yaml
    - kubectl apply -f kubernetes/namespace.yaml 
    - kubectl apply -f kubernetes/ingress.yaml
    - kubectl apply -f kubernetes/volumes.yaml 
    - kubectl apply -f kubernetes
  